---
- name: Setup Audio Processing Environment in Docker
  hosts: trainhebrew_container_env
  become: true
  become_method: sudo
  vars:
    train_dir: "/data/train"
    test_dir: "/data/test"
    lang_dir: "/data/lang"
    model_dir: "/opt/kaldi/exp/tri2"
    praat_script: "/opt/praat/voice_isolation.praat"
    mongo_uri: "mongodb://localhost:27017"
    db_name: "HebrewSpeechRecognition"
    collection_name: "Transcriptions"

  tasks:
    # UPGRADE to Python3
    - name: Upgrade pip
      pip:
        name: pip
        extra_args: --upgrade
        executable: pip3

    # Install required packages
    - name: Install dependencies
      apt:
        name:
          - pulseaudio
          - pavucontrol
          - ffmpeg
          - python3-pip
          - iptables
          - git 
          - build-essential 
          - cmake 
          - libatlas-base-dev 
          - libboost-all-dev 
          - sox 
          - praat 
        update_cache: yes


# ENABLE UDP NETWORK ON
    # Install pip packages
    - name: Install pip packages torch
      pip:
        name:
          - torch
        executable: pip3
    - name: Install pip packages vosk
      pip:
        name:
          - vosk
        executable: pip3
    - name: Install pip packages pymongo
      pip:
        name:
          - pymongo
        executable: pip3

    - name: Ensure the user kaldi exists
      user:
        name: kaldi
        state: present
        shell: /bin/bash  
        home: /home/kaldi  
        create_home: yes 

    # Clone Kaldi repository and build
    - name: Create Kaldi working directory
      file:
        path: "/opt/kaldi"
        state: directory
        owner: "kaldi"
        mode: '0755'
# https://github.com/kaldi-asr/kaldi/archive/refs/heads/master.zip
# https://github.com/kaldi-asr/kaldi.git
#    - name: Clone Kaldi repository
#      git:
#        repo: "https://github.com/kaldi-asr/kaldi.git"
#        dest: "/opt/kaldi"
#        version: "master"
    - name: Download repository zip file
      get_url:
        url: https://github.com/kaldi-asr/kaldi/archive/refs/heads/master.zip
        dest: /opt/kaldi/master.zip  # Change to your desired destination
        mode: '0644'

    - name: Install unzip utility
      apt:
        name: unzip
        state: present
      become: yes 

    - name: Unzip the downloaded file
      unarchive:
        src: /opt/kaldi/master.zip
        dest: /opt/kaldi  
        remote_src: yes 

#    - name: Fetch from Git
#      command: git ls-remote origin -h refs/heads/master
#      args:
#        chdir: /opt/kaldi

# this part takes forever
    - name: Build and Install Kaldi
      shell: |
        cd /opt/kaldi/tools
        make
        cd ../src
        ./configure
        make -j4
      args:
        chdir: /opt/kaldi
        creates: "/opt/kaldi/src/online2bin/online2-wav-nnet3-latgen-faster"
    
    # Copy WAR file to Tomcat
    - name: Deploy train-hebrew WAR file to Tomcat
      copy:
        src: "../train-hebrew/target/train-hebrew-1.0-SNAPSHOT.war"
        dest: "/usr/local/tomcat/webapps/train-hebrew.war"
